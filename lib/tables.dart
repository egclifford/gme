import 'dart:math';

class FateFocus {
  final int threshold;
  final String display;
  final bool isNpc;
  final bool isPc;
  final bool isThread;
  const FateFocus({this.threshold, this.display, this.isNpc, this.isPc, this.isThread});
}

class TableConstants {
  static const List<String> chaosLikelihoods = [
    "Impossible",
    "No way",
    "Very Unlikely",
    "Unlikely",
    "50/50",
    "Somewhat Likely",
    "Likely",
    "Very Likely",
    "Near Sure Thing",
    "Sure Thing",
    "Must Be"
  ];

  static const List<List<int>> fateRolls = [
    [-20, 0, 5, 5, 10, 20, 25, 45, 50, 55, 90],
    [0, 5, 5, 10, 15, 25, 35, 50, 55, 65, 85],
    [0, 5, 10, 15, 25, 45, 50, 65, 75, 80, 90],
    [5, 10, 15, 20, 35, 50, 60, 75, 80, 85, 95],
    [5, 15, 25, 35, 50, 65, 75, 85, 90, 90, 95],
    [10, 25, 45, 50, 65, 80, 85, 90, 95, 95, 100],
    [15, 35, 50, 55, 75, 85, 90, 95, 95, 95, 100],
    [25, 50, 65, 75, 85, 90, 95, 95, 100, 110, 130],
    [50, 75, 85, 90, 95, 95, 100, 105, 115, 125, 145]
  ];

  static const List<String> fateRollString = ["Exceptional Yes", "Yes", "No", "Exceptional No"];

  static String getFateRollString(int chaos, int likelihood, int roll) {
    int fate = fateRolls[chaos-1][likelihood];
    if (roll <= (fate / 5)) return fateRollString[0];  // Exceptional yes.
    if (roll <= fate) return fateRollString[1];  // Yes.
    if (roll > (80 + fate / 5)) return fateRollString[3];  // Exceptional no.
    return fateRollString[2];
  }

  static const List<FateFocus> fateFocuses = [
    FateFocus(threshold: 7, display: "Remote Event", isNpc: false, isPc: false, isThread: false),
    FateFocus(threshold: 28, display: "Action for NPC #", isNpc: true, isPc: false, isThread: false),
    FateFocus(threshold: 35, display: "New NPC", isNpc: false, isPc: false, isThread: false),
    FateFocus(threshold: 45, display: "Move toward Thread #", isNpc: false, isPc: false, isThread: true),
    FateFocus(threshold: 52, display: "Move away from Thread #", isNpc: false, isPc: false, isThread: true),
    FateFocus(threshold: 55, display: "Close Thread #", isNpc: false, isPc: false, isThread: true),
    FateFocus(threshold: 67, display: "Negative for PC #", isNpc: false, isPc: true, isThread: false),
    FateFocus(threshold: 75, display: "Positive for PC #", isNpc: false, isPc: true, isThread: false),
    FateFocus(threshold: 83, display: "Ambiguous Event", isNpc: false, isPc: false, isThread: false),
    FateFocus(threshold: 92, display: "Negative for NPC #", isNpc: true, isPc: false, isThread: false),
    FateFocus(threshold: 100, display: "Positive for NPC #", isNpc: true, isPc: false, isThread: false),
  ];

  static const Map<int, int> uneChaosConversion = {
    1: 0, 2: 1, 3: 1, 4: 2, 5: 2, 6: 2, 7: 3, 8: 3, 9: 4 };

  static const List<List<int>> unePowerLevel = [
    [2, 10, 88, 98, 100],
    [4, 15, 85, 96, 100],
    [5, 20, 80, 95, 100],
    [8, 25, 85, 92, 100],
    [12, 30, 70, 88, 100]
  ];

  static const List<String> unePowerLevelString = [
    "much weaker",
    "slightly weaker",
    "comparable",
    "slightly stronger",
    "much stronger"];

  static String getUnePowerLevelString(int chaos) {
    var rng = new Random();
    int num = rng.nextInt(100);
    List<int> thresholds = unePowerLevel[uneChaosConversion[chaos]];
    for (int i = 0; i < thresholds.length; i++) {
      if (num < thresholds[i])
        return unePowerLevelString[i];
    }
    return "++";
  }

  static const Map<String, String> fieldDisplays = {
    "threads": "Threads",
    "npcs": "NPCs",
    "pcs": "PCs",
  };

  static const List<String> fateActions = [
    "attainment",
    "starting",
    "neglect",
    "fight",
    "recruit",
    "triumph",
    "violate",
    "oppose",
    "malice",
    "communicate",
    "persecute",
    "increase",
    "decrease",
    "abandon",
    "gratify",
    "inquire",
    "antagonize",
    "move",
    "waste",
    "truce",
    "release",
    "befriend",
    "judge",
    "desert",
    "dominate",
    "procrastinate",
    "praise",
    "separate",
    "take",
    "break",
    "heal",
    "delay",
    "stop",
    "lie",
    "return",
    "immitate",
    "struggle",
    "inform",
    "bestow",
    "postpone",
    "expose",
    "haggle",
    "imprison",
    "release",
    "celebrate",
    "develop",
    "travel",
    "block",
    "harm",
    "debase",
    "overindulge",
    "adjourn",
    "adversity",
    "kill",
    "disrupt",
    "usurp",
    "create",
    "betray",
    "agree",
    "abuse",
    "oppress",
    "inspect",
    "ambush",
    "spy",
    "attach",
    "carry",
    "open",
    "carelessness",
    "ruin",
    "extravagance",
    "trick",
    "arrive",
    "propose",
    "divide",
    "refuse",
    "mistrust",
    "deceive",
    "cruelty",
    "intolerance",
    "trust",
    "excitement",
    "activity",
    "assist",
    "care",
    "neglect",
    "passion",
    "work hard",
    "control",
    "attract",
    "failure",
    "pursue",
    "avenge",
    "proceedings",
    "dispute",
    "punish",
    "guide",
    "transform",
    "overthrow",
    "damage",
    "change",
  ];

  static const List<String> fateSubjects = [
    "goals",
    "dreams",
    "environment",
    "outside",
    "inside",
    "reality",
    "allies",
    "enemies",
    "evil",
    "good",
    "emotions",
    "opposition",
    "war",
    "peace",
    "the innocent",
    "love",
    "the spiritual",
    "the intellectual",
    "new ideas",
    "joy",
    "messages",
    "energy",
    "balance",
    "tension",
    "friendship",
    "the physical",
    "a project",
    "pleasures",
    "pain",
    "possessions",
    "benefits",
    "plans,lies",
    "expectations",
    "legal matters",
    "bureaucracy",
    "business",
    "a path",
    "news",
    "exterior factors",
    "advice",
    "a plot",
    "competition",
    "prison",
    "illness",
    "food",
    "attention",
    "success",
    "failure",
    "travel",
    "jealousy",
    "dispute",
    "home",
    "investment",
    "suffering",
    "wishes",
    "tactics",
    "stalemate",
    "randomness",
    "misfortune",
    "death",
    "disruption",
    "power",
    "a burden",
    "intrigues",
    "fears",
    "ambush",
    "rumor",
    "wounds",
    "extravagance",
    "a representative",
    "adversities",
    "opulence",
    "liberty",
    "military",
    "the mundane",
    "trials",
    "masses",
    "vehicle",
    "art",
    "victory",
    "plants",
    "riches",
    "status quo",
    "technology",
    "hope",
    "magic",
    "illusions",
    "portals",
    "danger",
    "weapons",
    "animals",
    "weather",
    "elements",
    "nature",
    "the public",
    "leadership",
    "fame",
    "anger",
    "information",
  ];

  static String getFateAction() {
    var rng = new Random();
    int num = rng.nextInt(fateActions.length);
    return fateActions[num];
  }

  static String getFateSubject() {
    var rng = new Random();
    int num = rng.nextInt(fateSubjects.length);
    return fateSubjects[num];
  }

  static const List<String> uneModifiers = [
    "superfluous",
    "addicted",
    "conformist",
    "nefarious",
    "sensible",
    "untrained",
    "romantic",
    "unreasonable",
    "skilled",
    "neglectful",
    "lively",
    "forthright",
    "idealistic",
    "unsupportive",
    "rational",
    "coarse",
    "foolish",
    "cunning",
    "delightful",
    "miserly",
    "inept",
    "banal",
    "logical",
    "subtle",
    "reputable",
    "wicked",
    "lazy",
    "pessimistic",
    "solemn",
    "habitual",
    "meek",
    "helpful",
    "unconcerned",
    "generous",
    "docile",
    "cheery",
    "pragmatic",
    "serene",
    "thoughtful",
    "hopeless",
    "pleasant",
    "insensitive",
    "titled",
    "inexperienced",
    "prying",
    "oblivious",
    "refined",
    "indispensible",
    "scholarly",
    "conservative",
    "uncouth",
    "willful",
    "indifferent",
    "fickle",
    "elderly",
    "sinful",
    "naive",
    "privileged",
    "glum",
    "likeable",
    "lethargic",
    "defiant",
    "obnoxious",
    "insightful",
    "tactless",
    "fanatic",
    "plebian",
    "childish",
    "pious",
    "uneducated",
    "inconsiderate",
    "cultured",
    "revolting",
    "curious",
    "touchy",
    "needy",
    "dignified",
    "pushy",
    "kind",
    "corrupt",
    "jovial",
    "shrewd",
    "liberal",
    "compliant",
    "destitute",
    "conniving",
    "careful",
    "alluring",
    "defective",
    "optimistic",
    "affluent",
    "despondent",
    "mindless",
    "passionate",
    "devoted",
    "established",
    "unseemly",
    "dependable",
    "righteous",
    "confident",
  ];

  static const List<String> uneNouns = [
    "gypsy",
    "witch",
    "merchant",
    "expert",
    "commoner",
    "judge",
    "ranger",
    "occultist",
    "reverend",
    "thug",
    "drifter",
    "journeyman",
    "statesman",
    "astrologer",
    "duelist",
    "jack-of-all-trades",
    "aristocrat",
    "preacher",
    "artisan",
    "rogue",
    "missionary",
    "outcast",
    "mercenary",
    "caretaker",
    "hermit",
    "orator",
    "chieftain",
    "pioneer",
    "burglar",
    "vicar",
    "officer",
    "explorer",
    "warden",
    "outlaw",
    "adept",
    "bum",
    "sorcerer",
    "laborer",
    "master",
    "ascendant",
    "villager",
    "magus",
    "conscript",
    "worker",
    "actor",
    "herald",
    "highwayman",
    "fortune-hunter",
    "governor",
    "scrapper",
    "monk",
    "homemaker",
    "recluse",
    "steward",
    "polymath",
    "magician",
    "traveler",
    "vagrant",
    "apprentice",
    "politician",
    "mediator",
    "crook",
    "civilian",
    "activist",
    "hero",
    "champion",
    "cleric",
    "slave",
    "gunman",
    "clairvoyant",
    "patriarch",
    "shopkeeper",
    "crone",
    "adventurer",
    "soldier",
    "entertainer",
    "craftsman",
    "scientist",
    "ascetic",
    "superior",
    "performer",
    "magister",
    "serf",
    "brute",
    "inquisitor",
    "lord",
    "villain",
    "professor",
    "servant",
    "charmer",
    "globetrotter",
    "sniper",
    "courtier",
    "priest",
    "tradesman",
    "hitman",
    "wizard",
    "beggar",
    "tradesman",
    "warrior",
  ];

  static const List<String> uneMotivationVerbs = [
    "advise",
    "obtain",
    "attempt",
    "spoil",
    "oppress",
    "interact",
    "create",
    "abduct",
    "promote",
    "conceive",
    "blight",
    "progress",
    "distress",
    "possess",
    "record",
    "embrace",
    "contact",
    "pursue",
    "associate",
    "prepare",
    "shepherd",
    "abuse",
    "indulge",
    "chronicle",
    "fulfill",
    "drive",
    "review",
    "aid",
    "follow",
    "advance",
    "guard",
    "conquer",
    "hinder",
    "plunder",
    "construct",
    "encourage",
    "agonize",
    "comprehend",
    "administer",
    "relate",
    "take",
    "discover",
    "deter",
    "acquire",
    "damage",
    "publicize",
    "burden",
    "advocate",
    "implement",
    "understand",
    "collaborate",
    "strive",
    "complete",
    "compel",
    "join",
    "assist",
    "defile",
    "produce",
    "institute",
    "account",
    "work",
    "accompany",
    "offend",
    "guide",
    "learn",
    "persecute",
    "communicate",
    "process",
    "report",
    "develop",
    "steal",
    "suggest",
    "weaken",
    "achieve",
    "secure",
    "inform",
    "patronize",
    "depress",
    "determine",
    "seek",
    "manage",
    "suppress",
    "proclaim",
    "operate",
    "access",
    "refine",
    "compose",
    "undermine",
    "explain",
    "discourage",
    "attend",
    "detect",
    "execute",
    "maintain",
    "realize",
    "convey",
    "rob",
    "establish",
    "overthrow",
    "support",
  ];
  static const List<String> uneMotivationNouns = [
    "wealth",
    "hardship",
    "affluence",
    "resources",
    "prosperity",
    "poverty",
    "opulence",
    "deprivation",
    "success",
    "distress",
    "contraband",
    "music",
    "literature",
    "technology",
    "alcohol",
    "medicines",
    "beauty",
    "strength",
    "intelligence",
    "force",
    "the wealthy",
    "the populous",
    "enemies",
    "the public",
    "religion",
    "the poor",
    "family",
    "the elite",
    "academia",
    "the forsaken",
    "the law",
    "the government",
    "the downtrodden",
    "friends",
    "criminals",
    "allies",
    "secret societies",
    "the world",
    "military",
    "the church",
    "dreams",
    "discretion",
    "love",
    "freedom",
    "pain",
    "faith",
    "slavery",
    "enlightenment",
    "racism",
    "sensuality",
    "dissonance",
    "peace",
    "discrimination",
    "disbelief",
    "pleasure",
    "hate",
    "happiness",
    "servitude",
    "harmony",
    "justice",
    "gluttony",
    "lust",
    "envy",
    "greed",
    "laziness",
    "wrath",
    "pride",
    "purity",
    "moderation",
    "vigilance",
    "zeal",
    "composure",
    "charity",
    "modesty",
    "atrocities",
    "cowardice",
    "narcissism",
    "compassion",
    "valor",
    "patience",
    "advice",
    "propaganda",
    "science",
    "knowledge",
    "communications",
    "lies",
    "myths",
    "riddles",
    "stories",
    "legends",
    "industry",
    "new religions",
    "progress",
    "animals",
    "ghosts",
    "magic",
    "nature",
    "old religions",
    "expertise",
    "spirits,"
  ];
}
